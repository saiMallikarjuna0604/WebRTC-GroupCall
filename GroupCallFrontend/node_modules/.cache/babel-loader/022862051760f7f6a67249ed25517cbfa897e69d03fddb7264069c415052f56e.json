{"ast":null,"code":"var _jsxFileName = \"/Users/instavc/Desktop/WebRTC/webrtc-group-calling/GroupCallFrontend/group-call-frontend/src/components/CreateGroupPopover.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserCard from './UserCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateGroupPopover = ({\n  data,\n  onClose,\n  onAction,\n  currentUserEmail\n}) => {\n  _s();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [groupName, setGroupName] = useState('');\n  const [allUsers, setAllUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchAllUsers();\n  }, []);\n  const fetchAllUsers = async () => {\n    try {\n      var _data$users;\n      const response = await fetch('http://localhost:3001/api/users/all');\n      const data = await response.json();\n      // Filter out current user from the list\n      const filteredUsers = ((_data$users = data.users) === null || _data$users === void 0 ? void 0 : _data$users.filter(user => user.email !== currentUserEmail)) || [];\n      setAllUsers(filteredUsers);\n    } catch (error) {\n      console.error('Error fetching all users:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUserSelect = user => {\n    setSelectedUsers(prev => {\n      const isSelected = prev.some(u => u.email === user.email);\n      if (isSelected) {\n        return prev.filter(u => u.email !== user.email);\n      } else {\n        return [...prev, user];\n      }\n    });\n  };\n  const handleCreateGroup = () => {\n    if (groupName.trim() && selectedUsers.length > 0) {\n      // Include current user in the group members\n      const allMembers = [...selectedUsers.map(u => u.email), currentUserEmail];\n      onAction('create-group', {\n        name: groupName,\n        members: allMembers\n      });\n      onClose();\n    }\n  };\n  const isUserSelected = user => {\n    return selectedUsers.some(u => u.email === user.email);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popover-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popover-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popover-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popover-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-name-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"groupName\",\n          children: \"Group Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"groupName\",\n          value: groupName,\n          onChange: e => setGroupName(e.target.value),\n          placeholder: \"Enter group name\",\n          className: \"group-name-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popover-description\",\n        children: \"Select users to add to the group (online and offline users will be notified)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), allUsers.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No users available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-list\",\n        children: allUsers.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n          user: user,\n          isSelected: isUserSelected(user),\n          onSelect: handleUserSelect,\n          selectionType: \"checkbox\"\n        }, user.email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popover-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-button\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: handleCreateGroup,\n        disabled: !groupName.trim() || selectedUsers.length === 0,\n        children: [\"Create Group (\", selectedUsers.length, \" selected)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateGroupPopover, \"0U9sLg1ALaksK2uEgJ4llB4e5Z0=\");\n_c = CreateGroupPopover;\nexport default CreateGroupPopover;\nvar _c;\n$RefreshReg$(_c, \"CreateGroupPopover\");","map":{"version":3,"names":["React","useState","useEffect","UserCard","jsxDEV","_jsxDEV","CreateGroupPopover","data","onClose","onAction","currentUserEmail","_s","selectedUsers","setSelectedUsers","groupName","setGroupName","allUsers","setAllUsers","loading","setLoading","fetchAllUsers","_data$users","response","fetch","json","filteredUsers","users","filter","user","email","error","console","handleUserSelect","prev","isSelected","some","u","handleCreateGroup","trim","length","allMembers","map","name","members","isUserSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","type","id","value","onChange","e","target","placeholder","onSelect","selectionType","disabled","_c","$RefreshReg$"],"sources":["/Users/instavc/Desktop/WebRTC/webrtc-group-calling/GroupCallFrontend/group-call-frontend/src/components/CreateGroupPopover.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserCard from './UserCard';\n\nconst CreateGroupPopover = ({ data, onClose, onAction, currentUserEmail }) => {\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [groupName, setGroupName] = useState('');\n  const [allUsers, setAllUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchAllUsers();\n  }, []);\n\n  const fetchAllUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/users/all');\n      const data = await response.json();\n      // Filter out current user from the list\n      const filteredUsers = data.users?.filter(user => user.email !== currentUserEmail) || [];\n      setAllUsers(filteredUsers);\n    } catch (error) {\n      console.error('Error fetching all users:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleUserSelect = (user) => {\n    setSelectedUsers(prev => {\n      const isSelected = prev.some(u => u.email === user.email);\n      if (isSelected) {\n        return prev.filter(u => u.email !== user.email);\n      } else {\n        return [...prev, user];\n      }\n    });\n  };\n\n  const handleCreateGroup = () => {\n    if (groupName.trim() && selectedUsers.length > 0) {\n      // Include current user in the group members\n      const allMembers = [...selectedUsers.map(u => u.email), currentUserEmail];\n      onAction('create-group', {\n        name: groupName,\n        members: allMembers\n      });\n      onClose();\n    }\n  };\n\n  const isUserSelected = (user) => {\n    return selectedUsers.some(u => u.email === user.email);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"popover-header\">\n        <h3>Create Group</h3>\n        <div className=\"loading\">Loading users...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"popover-container\">\n      <div className=\"popover-header\">\n        <h3>Create Group</h3>\n        <button className=\"close-button\" onClick={onClose}>Ã—</button>\n      </div>\n      \n      <div className=\"popover-body\">\n        <div className=\"group-name-input\">\n          <label htmlFor=\"groupName\">Group Name:</label>\n          <input\n            type=\"text\"\n            id=\"groupName\"\n            value={groupName}\n            onChange={(e) => setGroupName(e.target.value)}\n            placeholder=\"Enter group name\"\n            className=\"group-name-field\"\n          />\n        </div>\n        \n        <p className=\"popover-description\">\n          Select users to add to the group (online and offline users will be notified)\n        </p>\n        \n        {allUsers.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>No users available</p>\n          </div>\n        ) : (\n          <div className=\"users-list\">\n            {allUsers.map((user) => (\n              <UserCard\n                key={user.email}\n                user={user}\n                isSelected={isUserSelected(user)}\n                onSelect={handleUserSelect}\n                selectionType=\"checkbox\"\n              />\n            ))}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"popover-footer\">\n        <button className=\"cancel-button\" onClick={onClose}>Cancel</button>\n        <button \n          className=\"action-button\" \n          onClick={handleCreateGroup}\n          disabled={!groupName.trim() || selectedUsers.length === 0}\n        >\n          Create Group ({selectedUsers.length} selected)\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateGroupPopover; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}